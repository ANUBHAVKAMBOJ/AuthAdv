{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Authentication API",
    "description": "API for authentication and user profile management"
  },
  "basePath": "/api",
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object to be registered",
            "required": true,
            "schema": {
              "": "#/definitions/Register"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "tags": ["Auth"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout a user",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "summary": "Get user profile",
        "tags": ["User"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": ["User"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "": "#/definitions/UpdateProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile updated successfully"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/users/public": {
      "get": {
        "summary": "List public profiles",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Public profiles retrieved successfully"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user profile by ID",
        "tags": ["User"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          },
          "403": {
            "description": "Private profile"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Register": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UpdateProfile": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
