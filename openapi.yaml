openapi: 3.0.0
info:
  version: 1.0.0
  title: Authentication API
  description: API for authentication and user profile management
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        description: User object to be registered
        required: true
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/login:
    post:
      summary: Login a user
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid email or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    post:
      summary: Logout a user
      tags:
        - Auth
      responses:
        '200':
          description: User logged out successfully
  /users/profile:
    get:
      summary: Get user profile
      tags:
        - User
      security:
        - Bearer: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
    put:
      summary: Update user profile
      tags:
        - User
      security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
        required: true
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/public:
    get:
      summary: List public profiles
      tags:
        - User
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: pageSize
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Public profiles retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicProfile'
  /users/{id}:
    get:
      summary: Get user profile by ID
      tags:
        - User
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '403':
          description: Private profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ping:
    get:
      summary: Ping the server
      tags:
        - Ping
      responses:
        '200':
          description: Server is up and running
        '500':
          description: Server is down
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
servers:
  - url: /api/v1
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Register:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    UpdateProfile:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        email:
          type: string
        bio:
          type: string
        phone:
          type: string
        isPublic:
          type: boolean
    UserProfile:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        bio:
          type: string
        phone:
          type: string
        isPublic:
          type: boolean
    PublicProfile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        bio:
          type: string
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        stack:
          type: string